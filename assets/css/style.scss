---
---

// https://material.io/design/color/the-color-system.html
$background-color: #fafafa; // Gray 50
$text-color: rgba(0, 0, 0, 0.87); // Black 87%
$text-color-dark: #000000; // Black 100%
$text-color-light: rgba(0, 0, 0, 0.54); // Black 54%
$primary-color: #2e7d32; // Green 800
$primary-color-light: #388e3c; // Green 700
$accent-color: #f9a825; // Yellow 800

$spacer: 32px;
$breakpoints: (
  sm: 576px,
  md: 720px,
);

* {
  box-sizing: border-box;
}

html {
  margin: 0;
  font-family: Roboto, sans-serif;
  font-weight: 400;
  line-height: 1.5;
  color: $text-color;
}

body {
  margin: 0;
  font-size: 1rem;
}

main {
  background-color: $background-color;
  max-width: 960px;
  margin: 0 auto;
  padding: $spacer;
  @media (min-width: map-get($breakpoints, "md")) {
    padding: $spacer 2 * $spacer;
  }
}

h1, h2 {
  font-family: Martel, serif;
  margin-bottom: 0.5 * $spacer;
  line-height: 1;
}

h1 {
  color: $text-color-light;
}

h2 {
  color: $accent-color;
}

p, ul, ol {
  margin-top: 0.5 * $spacer 0;
}

ul {
  $indent: $spacer;
  list-style: none;
  padding-left: $indent;
  line-height: 1.5;
  & > li {
    position: relative;
    &::before {
      position: absolute;
      left: -0.75 * $indent;
      top: 1.1ex;
      content: '\25a0'; // BLACK SQUARE
      font-size: 50%;
      color: $text-color-light;
    }
  }
}

strong {
  font-weight: 700;
  color: $primary-color;
}

a {
  color: $primary-color;
  &:hover,
  &:active {
    color: $primary-color-light;
  }
  &:visited {
    color: $primary-color;
  }
}

hr {
  border: none;
  border-top: 1px solid #ccc;
}

input {
  font: inherit;
  line-height: 2em;
}

input[type="text"],
input[type="email"] {
  border: 1px solid #ccc;
  padding: 0 0.25 * $spacer;
  line-height: 2em;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.125) inset;
  width: 100%;
}

input[type="submit"],
button,
.button {
  border: none;
  padding: 0 0.5 * $spacer;
  background-color: $primary-color;
  color: white;
  font-weight: bold;
  text-transform: uppercase;
  cursor: pointer;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
  position: relative;

  &:hover,
  &:focus {
    background-color: $primary-color-light;
  }

  &:active {
    top: 2px;
    background-color: $primary-color;
    box-shadow: 0 0 2px rgba(0, 0, 0, 0.5);
  }
}

.large {
  font-size: 133%;
  font-weight: 100;
  color: $text-color-dark;
}

.small {
  font-size: 75%;
  color: $text-color-light;
}

.color-primary {
  color: $primary-color;
}

.device-frame {
  $screen-width: 1080px;
  $screen-height: 1920px;
  $frame-width: 1330px;
  $frame-height: 2532px;
  position: relative;
  width: 100%;
  // Trick for maintaining aspect ratio: 100% is relative to parent *width*.
  padding-bottom: $frame-height / $frame-width * 100%;

  background-image: url(/assets/img/device_frame.png);
  background-size: 100% 100%;
  box-sizing: content-box;
  // Paddings taken from the image.

  .device-screen {
    position: absolute;
    top: 295px / $frame-height * 100%;
    right: 132px / $frame-width * 100%;
    bottom: 317px / $frame-height * 100%;
    left: 118px / $frame-width * 100%;

    overflow: hidden;
  }
}

.carousel {
  font-size: 0;
  white-space: nowrap;
  & > img {
    width: 100%;
    height: 100%;
  }

  $num-images: 3;
  $time-per-image: 3s;
  $transition-time: 0.6s;
  $total-time: $num-images * ($time-per-image + $transition-time);

  @keyframes carousel {
    @for $i from 0 to $num-images {
      #{$i / $num-images * 100%} {
        transform: translateX(-$i * 100%);
      }
      #{($i + $time-per-image / ($time-per-image + $transition-time)) / $num-images * 100%} {
        transform: translateX(-$i * 100%);
      }
    }
  }
  animation-name: carousel;
  animation-duration: $total-time;
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
}

// Some utilities inspired by Bootstrap, including the basics of the grid system.

.d-none { display: none; }
.d-block { display: block; }

.text-left { text-align: left; }
.text-center { text-align: center; }
.text-right { text-align: right; }
.text-justify { text-align: justify; }

.w-100 { width: 100% !important; }

.mt-0 { margin-top: 0 !important; }
.mb-0 { margin-bottom: 0 !important; }

.mt-1 { margin-top: 0.25 * $spacer !important; }
.mb-1 { margin-bottom: 0.25 * $spacer !important; }

.mt-2 { margin-top: 0.5 * $spacer !important; }
.mb-2 { margin-bottom: 0.5 * $spacer !important; }

.mt-3 { margin-top: $spacer !important; }
.mb-3 { margin-bottom: $spacer !important; }

.row {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  margin-left: -0.5 * $spacer;
  margin-right: -0.5 * $spacer;
}

.col {
  flex-basis: 0;
  flex-grow: 1;
}

.col-auto {
  flex-grow: 0;
  flex-shrink: 0;
  flex-basis: auto;
  width: auto;
}

[class^="col-"] {
  position: relative;
  padding-left: 0.5 * $spacer;
  padding-right: 0.5 * $spacer;
}

@for $i from 1 through 12 {
  .col-#{$i} {
    width: $i / 12 * 100%;
  }
}

@each $breakpoint, $min-width in $breakpoints {
  @media (min-width: $min-width) {
    @for $i from 1 through 12 {
      .col-#{$breakpoint}-#{$i} {
        width: $i / 12 * 100%;
      }
    }

    .d-#{$breakpoint}-none { display: none; }
    .d-#{$breakpoint}-block { display: block; }
  }
}
